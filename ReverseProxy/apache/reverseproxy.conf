CustomLog /proc/self/fd/1 vhost_combined
ErrorLog /proc/self/fd/2

<VirtualHost _default_:80>
    DocumentRoot /var/www/html
    Redirect permanent / https://demo.sram.surf.nl/
</VirtualHost>

<VirtualHost _default_:443>
        DocumentRoot /var/www/html


        #####################################################################3
        ## SSL config
        SSLEngine on
        SSLCertificateFile      /etc/ssl/apache/fullchain.pem
        SSLCertificateKeyFile   /etc/ssl/apache/privkey.pem
        SSLHonorCipherOrder On
        SSLProtocol all -SSLv2 -SSLv3 -TLSv1
        SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA256

        SSLHonorCipherOrder on
        Header always set Strict-Transport-Security max-age=31556952
        SSLInsecureRenegotiation off
        #####################################################################3

        #####################################################################3
        ## OIDC config
        LoadModule auth_openidc_module modules/mod_auth_openidc.so

        OIDCProviderMetadataURL https://proxy.sram.surf.nl/.well-known/openid-configuration
        OIDCClientID APP-A5BFEC2C-B575-4D5E-BD4F-9C4BA8B69DED
        OIDCClientSecret ePUBmes4krD587dB9mtvsYbSu6rlaTVtRn7BHX5Tg4DSryQkHMGyWaqfA4s2AsPQ

        # OIDCRedirectURI is a vanity URL that must point to a path protected by this module but must NOT point to any content
        OIDCRedirectURI https://demo.sram.surf.nl/login/redirect_uri
        OIDCCryptoPassphrase nae0ohTam0aiwo1rie0iangohhaingie

        OIDCInfoHook userinfo

        OIDCScope "openid email uid profile eduperson_entitlement voperson_external_affiliation"
        OIDCRemoteUserClaim email

        ErrorDocument 401 "/denied.html"
        RewriteRule /logout /login/redirect_uri?logout=/ [R]

        <Location /login>
           AuthType openid-connect
           #Require valid-user
           Require claim "eduperson_entitlement~urn:mace:surf.nl:sram:group:uniharderwijk:"
        </Location>
        #####################################################################3



        # Reverse Proxy requests to correct VM
        ProxyRequests On
        ProxyPreserveHost on

        # Rewrite websocket requests to make Jupyter work
        RewriteEngine on

        # Authentication Header
        RequestHeader set X-Authenticated-User expr=%{REMOTE_USER}
        RequestHeader set X-Authenticated-Name expr=%{REMOTE_USER}
        # For SSL
        #RequestHeader set X-Authenticated-User expr=%{REMOTE_USER}s

        RedirectMatch 301 /hub(\d+)$ /hub$1/
        <LocationMatch "^/hub(\d+)/(.*)">
           AuthType openid-connect
           Require valid-user

            RewriteCond %{HTTP:Connection} Upgrade [NC]
            RewriteCond %{HTTP:Upgrade} websocket [NC]
            RewriteRule /hub(\d+)/(.*) ws://172.21.11.$1:8000/hub$1/$2 [NE,P,L]

            ProxyPassMatch http://172.21.11.$1:8000/hub$1/$2
            ProxyPassReverse http://172.21.11.$1:8000/hub$1/$2
        </LocationMatch>

        RedirectMatch 301 /ep(\d+)$ /ep$1/
        <LocationMatch "^/ep(\d+)/(.*)">
           AuthType openid-connect
           #Require valid-user
           Require claim "eduperson_entitlement~urn:mace:surf.nl:sram:group:uniharderwijk:"

            ProxyPassMatch http://172.21.11.$1:9001/$2
            ProxyPassReverse  http://172.21.11.$1:9001/$2
        </LocationMatch>
        <LocationMatch "^/ep(.+)/socket.io">
            RewriteCond %{QUERY_STRING} transport=websocket    [NC]
            RewriteRule /ep(\d+)/(.*) ws://172.21.11.$1:9001/socket.io/$2 [P,L]
        </LocationMatch>
</VirtualHost>
